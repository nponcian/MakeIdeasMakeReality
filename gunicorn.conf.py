import multiprocessing

# The socket to bind.
# host IP address and the corresponding port to listen to
bind = [
    "0.0.0.0:8000",
]

# Set environment variable (key=value).
# Pass variables to the execution environment.
raw_env = [
]

# The number of worker processes for handling requests.
# A positive integer generally in the 2-4 x $(NUM_CORES) range.
workers = multiprocessing.cpu_count() * 2 + 1

# Detaches the server from the controlling terminal and enters the background.
daemon = False

# The Access log file to write to.
# '-' means log to stdout.
# Logs details of each HTTP Request made.
accesslog = 'log/accesslog.log'

# The access log format.
access_log_format = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'

# The Error log file to write to.
# Using '-' for FILE makes gunicorn log to stderr.
# Logs generated by Gunicorn starting from the loglevel provided and the higher levels.
errorlog = 'log/errorlog.log'

# The granularity of Error log outputs.
# Valid level names are:
#     debug
#     info
#     warning
#     error
#     critical
loglevel = 'debug'

# Redirect stdout/stderr to specified file in errorlog.
# This catches prints made within Python code.
capture_output = True
