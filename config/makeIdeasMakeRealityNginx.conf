# Symlink this file to /etc/nginx/sites-available/makeIdeasMakeRealityNginx.conf
# Symlink that file from nginx/sites-available/ to nginx/sites-enabled/

# Now make sure you enable the nginx service so it automatically starts at boot:
#     systemctl enable nginx.service
# Either reboot, or start Nginx with the following command:
#     systemctl start nginx
# or
#     systemctl restart nginx

# No need to add "http" block as this is just included as part of /etc/nginx/nginx.conf
#     user www-data;
#     ...
#     http {
#             ...
#             include /etc/nginx/sites-enabled/*;
#     }

# Example configuration below. The target web server to forward the HTTP Request to via proxy_pass
# can be another server, not necessarily localhost. This is applicable if Gunicorn server lives in
# another server different from where Nginx server is running.
#     server {
#     listen 80;
#     server_name example.org;
#     access_log  /var/log/nginx/example.log;
#
#     location / {
#         proxy_pass http://127.0.0.1:8000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
#     }

server {
    # The port indicated in listen is where Nginx will listen to. This means that no other
    # application under the same device should listen on that port, not even Gunicorn nor the Django
    # built-in WSGIServer as that would produce an error. So if Nginx and Gunicorn lives on the same
    # device and Nginx is set here to listen on port 8000, which Gunicorn also does by default, then
    # you should either:
    #     1. Change the port to where gunicorn would listen to for requests through --bind (if using
    #        gunicorn command line), bind (if using gunicorn.conf.py), ListenStream (if using Systemd),
    #        etc. and then set Nginx to forward the request to the updated gunicorn listening port.
    #     2. Instead of forwarding the request to another port where Gunicorn is listening, just use
    #        a Unix socket file as the medium of communication between Nginx and Gunicorn. Set a
    #        socket to where Gunicorn would listen to for requests and then set Nginx to forward
    #        requests to that socket. This is the better way because with this, you do not need to
    #        configure Gunicorn to listen on a particular port from where not only Nginx could send
    #        requests to it but potentially anybody else outside the network, rendering Nginx and
    #        its security useless.
    # To verify if what server sent the response, whether it is Nginx server or Gunicorn server,
    # inspect elements from the browser and see the HTTP Response Headers "server" field. Ideally
    # everything should be from Nginx server and no one should be able to directly access and send
    # request to the Gunicorn server.

    listen          8000;
    server_name     127.0.0.1; # not mandatory, could be "server_name _;"
    location / {
        proxy_pass http://unix:/run/gunicorn.sock;
    }
}

server {
    listen          8001;
    server_name     127.0.0.1;
    location / {
        proxy_pass http://127.0.0.1:8002; # could be accessible directly without Nginx, see above
    }
}
